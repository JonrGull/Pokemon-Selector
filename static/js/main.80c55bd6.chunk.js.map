{"version":3,"sources":["App.js","index.js"],"names":["App","useState","PokemonLibrary","pokemon","pokemonData","setPokemonData","filterTypeOne","typeButtonInput","prevPokeArray","filter","pokeType","type","includes","reset","length","className","onClick","console","log","weaknesses","map","pokeObj","num","name","src","img","alt","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAIe,SAASA,IACtB,MAAsCC,mBAASC,EAAeC,SAA9D,mBAAOC,EAAP,KAAoBC,EAApB,KAYMC,EAAgB,SAACC,GAErBF,GAAe,SAACG,GAAD,OACbA,EAAcC,QAAO,SAACC,GACpB,OAAOA,EAASC,KAAKC,SAAd,UAA0BL,WAcvC,SAASM,IACPR,GAAe,SAACG,GAAD,OAAoCN,EAAeC,WAIpE,OAAIC,EAAYU,QAAU,EAEtB,qBAAKC,UAAU,YAAf,SACE,wBAAQC,QAASH,EAAjB,oDAMNI,QAAQC,IAAId,GAEV,sBAAKW,UAAU,MAAf,UACE,mDACA,sBAAKA,UAAU,oBAAf,UAGE,wBAAQC,QAAS,kBAAMV,EAAc,QAArC,8BACA,wBAAQU,QAAS,kBAAMV,EAAc,WAArC,iCACA,wBAAQU,QAAS,kBAAMV,EAAc,aAArC,6BACA,wBAAQU,QAAS,kBAAMV,EAAc,aAArC,mCACA,wBAAQU,QAAS,kBAAMV,EAAc,SAArC,+BACA,wBAAQU,QAAS,kBAAMV,EAAc,WAArC,uCACA,wBAAQU,QAAS,kBAAMV,EAAc,UAArC,gCACA,wBAAQU,QAAS,kBAAMV,EAAc,UAArC,gCACA,wBAAQU,QAAS,kBAAMV,EAAc,WAArC,uCACA,wBAAQU,QAAS,kBAAMV,EAAc,QAArC,8BACA,wBAAQU,QAAS,kBAAMV,EAAc,WAArC,2BACA,wBAAQU,QAAS,kBAAMV,EAAc,WAArC,iCACA,wBAAQU,QAAS,kBAAMV,EAAc,YAArC,kCACA,wBAAQU,QAAS,kBAAMV,EAAc,SAArC,+BACA,wBAAQU,QAAS,kBAAMV,EAAc,UAArC,mCAEF,gCACE,wBAAQU,QA/CS,WACrBX,GAAe,SAACG,GAAD,OACbA,EAAcC,QAAO,SAACC,GACpB,OAAOA,EAASS,WAAWP,SAAS,cA4CpC,yBAEA,wBAAQI,QAASH,EAAjB,sBAEF,qBAAKE,UAAU,iBAAf,SACGX,EAAYgB,KAAI,SAACC,GAAD,OACf,kCACIA,EAAQC,IADZ,MACoBD,EAAQE,KAD5B,MACqCF,EAAQV,KAAK,GAAI,IACnDU,EAAQV,KAAK,GACd,qBAAKa,IAAKH,EAAQI,IAAKC,IAAI,qBAHrBL,EAAQM,aCzE1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.80c55bd6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport PokemonLibrary from \"./data/PokemonList.json\";\r\n\r\nexport default function App() {\r\n  const [pokemonData, setPokemonData] = useState(PokemonLibrary.pokemon); //exact  same value as myFilteredPoke. Just the starting value\r\n  // const [languageState, SetLanguageState] = useState();\r\n\r\n\r\n  /* React.useEffect(() => { //still works without this, so let's remove it for now.\r\n    setPokemonData(PokemonLibrary.pokemon);\r\n  }, []); */\r\n\r\n  /* \r\nPut all these functions in useEffect?\r\n*/\r\n\r\n  const filterTypeOne = (typeButtonInput) => {\r\n    // can i use array destructuring here?\r\n    setPokemonData((prevPokeArray) =>\r\n      prevPokeArray.filter((pokeType) => {\r\n        return pokeType.type.includes(`${typeButtonInput}`);\r\n      })\r\n    );\r\n  };\r\n\r\n  const filterWeakness = () => {\r\n    setPokemonData((prevPokeArray) =>\r\n      prevPokeArray.filter((pokeType) => {\r\n        return pokeType.weaknesses.includes(\"Ice\");\r\n      })\r\n    );\r\n  };\r\n\r\n  //Reset State\r\n  function reset() {\r\n    setPokemonData((prevPokeArray) => (prevPokeArray = PokemonLibrary.pokemon));\r\n  }\r\n\r\n  //Error message and my terrible button. This should probably be it's own state.\r\n  if (pokemonData.length <= 0) {\r\n    return (\r\n      <div className=\"error-box\">\r\n        <button onClick={reset}>There's no more Pokemon! Try again!</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //logging array each button press\r\n  console.log(pokemonData);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Pokemon Selector!</h1>\r\n      <div className=\"filterTypeButtons\">\r\n        {/* We could TRY to use the pictures from the card game...but that would require pictures, not emojis */}\r\n        {/* Also I'd like to remove buttons if no Pokemon*/}\r\n        <button onClick={() => filterTypeOne(\"Bug\")}>Bug 🐛</button>\r\n        <button onClick={() => filterTypeOne(\"Dragon\")}>Dragon 🐲</button>\r\n        <button onClick={() => filterTypeOne(\"Electric\")}>Electric ⚡</button>\r\n        <button onClick={() => filterTypeOne(\"Fighting\")}>Fighting 🥊</button>\r\n        <button onClick={() => filterTypeOne(\"Fire\")}>Fire 🔥</button>\r\n        <button onClick={() => filterTypeOne(\"Flying\")}>Flying 🕊️</button>\r\n        <button onClick={() => filterTypeOne(\"Ghost\")}>Ghost 👻</button>\r\n        <button onClick={() => filterTypeOne(\"Grass\")}>Grass 🍃</button>\r\n        <button onClick={() => filterTypeOne(\"Ground\")}>Ground 🕳️</button>\r\n        <button onClick={() => filterTypeOne(\"Ice\")}>Ice 🧊</button>\r\n        <button onClick={() => filterTypeOne(\"Normal\")}>Normal ⭐</button>\r\n        <button onClick={() => filterTypeOne(\"Poison\")}>Poison ☠️</button>\r\n        <button onClick={() => filterTypeOne(\"Psychic\")}>Psychic 🔮</button>\r\n        <button onClick={() => filterTypeOne(\"Rock\")}>Rock 🧱</button>\r\n        <button onClick={() => filterTypeOne(\"Water\")}>Water 💧</button>\r\n      </div>\r\n      <div>\r\n        <button onClick={filterWeakness}>Weak to Ice</button>\r\n\r\n        <button onClick={reset}>Reset</button>\r\n      </div>\r\n      <div className=\"displayPokemon\">\r\n        {pokemonData.map((pokeObj) => (\r\n          <p key={pokeObj.id}>\r\n            #{pokeObj.num} | {pokeObj.name} | {pokeObj.type[0]}{\" \"}\r\n            {pokeObj.type[1]}\r\n            <img src={pokeObj.img} alt=\"Pokemon Images\"></img>\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//removed pokemonData && before on line51. Idk what that did.\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./App.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}